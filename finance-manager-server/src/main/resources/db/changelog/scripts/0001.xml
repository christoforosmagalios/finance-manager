<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">
        <changeSet author="finance -manager" id="0001">
            <sql>
				DROP TABLE IF EXISTS `transaction_category`;
				CREATE TABLE IF NOT EXISTS `transaction_category` (
				  `ID` varchar(36) NOT NULL COMMENT 'The Transaction Category Id',
				  `NAME` varchar(255) NOT NULL COMMENT 'The Transaction Category name (Translation key)',
				  `CODE` varchar(255) NOT NULL COMMENT 'The Transaction Category code',
					`COLOR` varchar(20) COMMENT 'The Transaction Category color.',
				  `ORDER` int(11) NOT NULL DEFAULT 0 COMMENT 'The Transaction Category order',
				  `CREATED_ON` datetime NOT NULL COMMENT 'Created on',
				  `UPDATED_ON` datetime NOT NULL COMMENT 'Updated on',
				  PRIMARY KEY (`ID`),
				  UNIQUE KEY `CODE` (`CODE`)
				) DEFAULT CHARSET=utf8 COMMENT='The Transaction Category.';

				DROP TABLE IF EXISTS `bill_category`;
				CREATE TABLE IF NOT EXISTS `bill_category` (
				`ID` varchar(36) NOT NULL COMMENT 'The Bill Category Id',
				`NAME` varchar(255) NOT NULL COMMENT 'The Bill Category name (Translation key)',
				`CODE` varchar(255) NOT NULL COMMENT 'The Bill Category code',
				`ORDER` int(11) NOT NULL DEFAULT 0 COMMENT 'The Bill Category order',
				`CREATED_ON` datetime NOT NULL COMMENT 'Created on',
				`UPDATED_ON` datetime NOT NULL COMMENT 'Updated on',
				PRIMARY KEY (`ID`),
				UNIQUE KEY `CODE` (`CODE`)
				) DEFAULT CHARSET=utf8 COMMENT='The Bill Category.';

				DROP TABLE IF EXISTS `address`;
				CREATE TABLE IF NOT EXISTS `address` (
				`ID` varchar(36) NOT NULL COMMENT 'The Address Id',
				`DESCRIPTION` varchar(255) NOT NULL COMMENT 'The Address description',
				`CREATED_ON` datetime NOT NULL COMMENT 'Created on',
				`UPDATED_ON` datetime NOT NULL COMMENT 'Updated on',
				PRIMARY KEY (`ID`)
				) DEFAULT CHARSET=utf8 COMMENT='The Address.';

				DROP TABLE IF EXISTS `bill`;
				CREATE TABLE IF NOT EXISTS `bill` (
				`ID` varchar(36) NOT NULL COMMENT 'The Bill Id',
				`FK_BILL_CATEGORY_ID` varchar(36) NOT NULL COMMENT 'Foreign key to the Bill Category table',
				`FK_BILL_ADDRESS_ID` varchar(36) NOT NULL COMMENT 'Foreign key to the Bill Address table',
				`CODE` varchar(10) NOT NULL COMMENT 'The Bill auto generated alphanumeric code.',
				`ISSUED_ON` date NOT NULL COMMENT 'The Bill issue date',
				`DUE_DATE` date NOT NULL COMMENT 'The Bill due date',
				`PAID_ON` date COMMENT 'The date Bill was paid',
				`CONSUMPTION_FROM` date NOT NULL COMMENT 'The Bill consumption from date',
				`CONSUMPTION_TO` date NOT NULL COMMENT 'The Bill consumption to date',
				`DESCRIPTION` varchar(255) NOT NULL COMMENT 'The Bill description',
				`NOTES` varchar(512) DEFAULT NULL COMMENT 'The Bill notes',
				`UNPAID_AMOUNT` decimal(14,5) NOT NULL COMMENT 'The unpaid amount from the previous bill',
				`AMOUNT` decimal(14,5) NOT NULL COMMENT 'The Bill amount',
				`PAID` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 stands for not paid, 1 stands for paid',
				`ACTUAL_BILL` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 stands for not actual, 1 stands for actual',
				`IMG_PATH` varchar(1024) COMMENT 'The Image path.',
				`IMG_TYPE` varchar(100) COMMENT 'The Image type.',
				`CREATED_ON` datetime NOT NULL COMMENT 'Created on',
				`UPDATED_ON` datetime NOT NULL COMMENT 'Updated on',
				PRIMARY KEY (`ID`),
				UNIQUE KEY `CODE` (`CODE`),
				KEY `FK_BILL_CATEGORY` (`FK_BILL_CATEGORY_ID`),
				KEY `FK_BILL_ADDRESS` (`FK_BILL_ADDRESS_ID`),
				CONSTRAINT `FK_BILL_CATEGORY` FOREIGN KEY (`FK_BILL_CATEGORY_ID`) REFERENCES `bill_category` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
				CONSTRAINT `FK_BILL_ADDRESS_ID` FOREIGN KEY (`FK_BILL_ADDRESS_ID`) REFERENCES `address` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
				) DEFAULT CHARSET=utf8 COMMENT='Information about a Bill.';
				
				DROP TABLE IF EXISTS `transaction`;
				CREATE TABLE IF NOT EXISTS `transaction` (
				  `ID` varchar(36) NOT NULL COMMENT 'The Transaction Id',
				  `TYPE` tinyint(1) NOT NULL DEFAULT 0 COMMENT 'Transaction type, 0 stands for income, 1 stands for expense',
				  `FK_TRANSACTION_CATEGORY_ID` varchar(36) NOT NULL COMMENT 'Foreign key to the transactionCategory table',
				  `FK_BILL_ID` varchar(36) COMMENT 'Foreign key to the bill table. The transaction is linked to this bill.',
				  `DATE` date NOT NULL COMMENT 'The Transaction date',
				  `DESCRIPTION` varchar(255) NOT NULL COMMENT 'The Transaction description',
				  `NOTES` varchar(512) DEFAULT NULL COMMENT 'The Transaction notes',
				  `AMOUNT` decimal(14,5) NOT NULL COMMENT 'The Transaction amount',
				  `CREATED_ON` datetime NOT NULL COMMENT 'Created on',
				  `UPDATED_ON` datetime NOT NULL COMMENT 'Updated on',
				  PRIMARY KEY (`ID`),
				  KEY `FK_TRANSACTION_CATEGORY` (`FK_TRANSACTION_CATEGORY_ID`),
				  KEY `FK_TRANSACTION_BILL` (`FK_BILL_ID`),
				  CONSTRAINT `FK_TRANSACTION_CATEGORY` FOREIGN KEY (`FK_TRANSACTION_CATEGORY_ID`) REFERENCES `transaction_category` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
				  CONSTRAINT `FK_TRANSACTION_BILL` FOREIGN KEY (`FK_BILL_ID`) REFERENCES `bill` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION

				) DEFAULT CHARSET=utf8 COMMENT='Information about a transaction.';
            </sql>
        </changeSet>
</databaseChangeLog>